<?php
namespace App\Controllers;

use App\Models\CanvasModel_v2;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;
use Psr\Log\LoggerInterface;

class Category extends BaseController
{

    public $page = 0;
    public $per_page = 30;

    public function initController(RequestInterface $request, ResponseInterface $response, LoggerInterface $logger)
    {
        parent::initController($request, $response, $logger); // TODO: Change the autogenerated stub
    }

    public function index($type = '')
    {

        if($type == '') $type = 'event';

        if($type == 'event' || $type == 'play') $this->getGroupSet($type);
        else if($type == 'env' || $type == 'notice') {
            $canvas_model = new CanvasModel_v2();
            $aInfo = $canvas_model->setTable('tb_group')->where('menu_type' , $type)->first();
            $this->lists($type, $aInfo['group_id']);
        }else if($type == 'month' ) $this->month();
        else $this->show404();

    }

    private function month()
    {

        $canvas_model   = new CanvasModel_v2();
        $curr_month = (int)date('m').'월';

        if(date('Ym') == '202407') $curr_month = '8월';

        $aMonthLists    = $canvas_model->getGroupList(['menu_type' => 'month']);

        $menu_type  = 'month';
        $first_data = $canvas_model->setTable('tb_group')->where(['menu_type'=>$menu_type , 'title' => $curr_month ])->orderBy('seq')->first();
        $aInput = [
            'group_id'  => $first_data['group_id']
            ,   'page'      => $this->request->getPost('page')
            ,   'menu_type' => $menu_type
        ];

        $set_page           = $this->request->getPostGet('page') ?? $this->page;
        $set_per_page       = $this->request->getPostGet('per_page') ?? $this->per_page;
        $s_limit            = max(($set_page - 1) * $set_per_page, 0);

        $canvas_model  = new CanvasModel_v2();
        $aList         = $canvas_model->getGroupList($aInput);

        foreach ($aList as $k => $r) {
            $aInput['group_id'] = $r['group_id'];
            $aGroupSubList = $canvas_model->getTemplateGroupList($aInput, false , $s_limit , $set_per_page);
            $aList[$k]['templates'] = $aGroupSubList;
        }

        $encrypter      = \Config\Services::encrypter();

        $aData = [
                'aList'         => $aList
            ,   'encrypter'     => $encrypter
            ,   'aMonthLists'   => $aMonthLists
            ,   'per_page'      => $this->per_page
            ,   'curr_month'    => $curr_month
        ];

        $this->_header_ctgr('month');
        echo view('category/month', $aData);
        $this->_footer();

    }


    private function getGroupSet($type)
    {

        if(empty($type)) $this->show404();

        $aInput = [
                'menu_type' => $type
            ,   'category' => 'template'
        ];

        if($type == 'event') $aInput['page_title'] = '행사';
        else if($type == 'play') $aInput['page_title'] = '놀이';
        else if($type == 'env') $aInput['page_title'] = '환경구성';
        else if($type == 'notice') $aInput['page_title'] = '안내문';

        $canvas_model  = new CanvasModel_v2();
        $aList         = $canvas_model->getGroupList($aInput, false , 0 , 999);

        foreach ($aList as $k => $r) {
            $aInput['group_id'] = $r['group_id'];
            $aGroupSubList = $canvas_model->getTemplateGroupList($aInput, false , 0 , 15);
            $aList[$k]['templates'] = $aGroupSubList;
        }

        unset($aInput['group_id']);

        $this->_header_ctgr($type);
        echo view('category/group' , [ 'aList' => $aList , 'aInput' => $aInput , 'encrypter' => \Config\Services::encrypter() , 'per_page' => $this->per_page ]);
        $this->_footer();

    }

    public function lists($type = '', $group_id = null)
    {

        if(empty($type) || empty($group_id)) $this->show404();

        $aInput = [
                'group_id'  => $group_id
            ,   'page'      => $this->request->getPost('page')
            ,   'menu_type' => $type
        ];

        if($type == 'event') $aInput['page_title'] = '행사';
        else if($type == 'play') $aInput['page_title'] = '놀이';
        else if($type == 'env') $aInput['page_title'] = '환경구성';
        else if($type == 'notice') $aInput['page_title'] = '안내문';

        $set_page           = $this->request->getPostGet('page') ?? $this->page;
        $set_per_page       = $this->request->getPostGet('per_page') ?? $this->per_page;
        $s_limit            = max(($set_page - 1) * $set_per_page, 0);

        $canvas_model  = new CanvasModel_v2();
        $aList         = $canvas_model->getGroupList($aInput);

        foreach ($aList as $k => $r) {
            $aInput['group_id'] = $r['group_id'];
            $aGroupSubList = $canvas_model->getTemplateGroupList($aInput, false , $s_limit , $set_per_page);
            $aList[$k]['templates'] = $aGroupSubList;
        }

        $this->_header_ctgr($type);
        echo view('category/lists' , [ 'aList' => $aList , 'aInput' => $aInput , 'encrypter' => \Config\Services::encrypter() , 'per_page' => $this->per_page ]);
        $this->_footer();

    }

    public function getLists($type, $group_id = null) : ResponseInterface
    {

        $aInput = [
                'group_id'  => $group_id
            ,   'page'      => $this->request->getPost('page')
            ,   'menu_type' => $type
        ];

        if(is_null($group_id)) unset($aInput['group_id']);

        $set_page           = $this->request->getPostGet('page') ?? $this->page;
        $set_per_page       = $this->request->getPostGet('per_page') ?? $this->per_page;
        $s_limit            = max(($set_page - 1) * $set_per_page, 0);


        if( isset($aInput['group_id']) ) $s_limit_ex = 0;
        else $s_limit_ex = $set_per_page;

        $canvas_model  = new CanvasModel_v2();
        $aList         = $canvas_model->getGroupList($aInput ,false , $s_limit_ex , $set_per_page);

        $encrypter      = \Config\Services::encrypter();

        foreach ($aList as $k => $r) {
            $aInput['group_id'] = $r['group_id'];
            $aGroupSubList = $canvas_model->getTemplateGroupList($aInput, false , $s_limit , $set_per_page);

            foreach ($aGroupSubList as $kk => $rr) {
                unset($aGroupSubList[$kk]['blob_data']);
                $strEnc = sprintf("%s_template__%s",date('YmdHis'),$rr["template_id"]);
                $aGroupSubList[$kk]['sEnc'] = urlencode($encrypter->encrypt($strEnc));
            }

            $aList[$k]['templates'] = $aGroupSubList;

        }

        $resp = [ 'success' => true , 'msg' => '' , 'data' => $aList ];

        return $this->response->setJSON($resp);

    }

}