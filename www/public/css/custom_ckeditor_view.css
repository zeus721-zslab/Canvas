:root {
    --ck-image-style-spacing: 1.5em;
    --ck-inline-image-style-spacing: calc(var(--ck-image-style-spacing) / 2);
}

/* Preserve aspect ratio of the resized image after introducing image height attribute. */
.ck-content img.image_resized {
    height: auto;
}

.ck-content .image.image_resized {
    max-width: 100%;
    /*
    The `<figure>` element for resized images must not use `display:table` as browsers do not support `max-width` for it well.
    See https://stackoverflow.com/questions/4019604/chrome-safari-ignoring-max-width-in-table/14420691#14420691 for more.
    Fortunately, since we control the width, there is no risk that the image will look bad.
    */
    display: block;
    box-sizing: border-box;

    & img {
        /* For resized images it is the `<figure>` element that determines the image width. */
        width: 100%;
    }

    & > figcaption {
        /* The `<figure>` element uses `display:block`, so `<figcaption>` also has to. */
        display: block;
    }
}

.ck.ck-editor__editable {
    /* The resized inline image nested in the table should respect its parent size.
    See https://github.com/ckeditor/ckeditor5/issues/9117. */
    & td,
    & th {
        & .image-inline.image_resized img {
            max-width: 100%;
        }
    }
}


.ck.ck-dropdown .ck-button.ck-resize-image-button .ck-button__label {
    width: 4em;
}

.ck-content {
    /* See: https://github.com/ckeditor/ckeditor5/issues/16317 */
    & .image {
        margin-left: auto;
        margin-right: auto;
        /* Provides a minimal side margin for the left and right aligned images, so that the user has a visual feedback
        confirming successful application of the style if image width exceeds the editor's size.
        See https://github.com/ckeditor/ckeditor5/issues/9342 */
        &.image-style-block-align-left,
        &.image-style-block-align-right {
            max-width: calc(100% - var(--ck-image-style-spacing));
        }

        /* Allows displaying multiple floating images in the same line.
        See https://github.com/ckeditor/ckeditor5/issues/9183#issuecomment-804988132 */
        &.image-style-align-left,
        &.image-style-align-right {
            clear: none;
        }

        &.image-style-side {
            float: right;
            margin-left: var(--ck-image-style-spacing);
            max-width: 50%;
        }

        &.image-style-align-left {
            float: left;
            margin-right: var(--ck-image-style-spacing);
        }

        &.image-style-align-right {
            float: right;
            margin-left: var(--ck-image-style-spacing);
        }

        &.image-style-block-align-right {
            margin-right: 0;
            margin-left: auto;
        }

        &.image-style-block-align-left {
            margin-left: 0;
            margin-right: auto;
        }
    }

    & .image-style-align-center {
        margin-left: auto;
        margin-right: auto;
    }

    & .image-style-align-left {
        float: left;
        margin-right: var(--ck-image-style-spacing);
    }

    & .image-style-align-right {
        float: right;
        margin-left: var(--ck-image-style-spacing);
    }

    /* Simulates margin collapsing with the preceding paragraph, which does not work for the floating elements. */
    & p + .image.image-style-align-left,
    & p + .image.image-style-align-right,
    & p + .image.image-style-side {
        margin-top: 0;
    }

    & .image-inline {
        &.image-style-align-left,
        &.image-style-align-right {
            margin-top: var(--ck-inline-image-style-spacing);
            margin-bottom: var(--ck-inline-image-style-spacing);
        }

        &.image-style-align-left {
            margin-right: var(--ck-inline-image-style-spacing);
        }

        &.image-style-align-right {
            margin-left: var(--ck-inline-image-style-spacing);
        }
    }
}